name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git zip unzip openjdk-17-jdk wget \
          build-essential libssl-dev libffi-dev python3-dev \
          python3-setuptools autoconf libtool pkg-config \
          zlib1g-dev libncurses5-dev libncursesw5-dev \
          cmake ccache

    - name: Cache Buildozer directory
      uses: actions/cache@v4
      with:
        path: .buildozer
        key: ${{ runner.os }}-buildozer-${{ hashFiles('buildozer.spec') }}

    - name: Install Buildozer
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython==0.29.36

    - name: Create main.py symlink for buildozer
      run: |
        ln -sf android_main.py main.py

    - name: Build APK with Buildozer
      run: |
        buildozer -v android debug
        
    - name: List build output
      if: always()
      run: |
        echo "=== Build directory contents ==="
        ls -la
        if [ -d "bin" ]; then
          echo "=== bin directory ==="
          ls -la bin/
        fi
        if [ -d ".buildozer" ]; then
          echo "=== .buildozer directory ==="
          ls -la .buildozer/
        fi

    - name: Find and Upload APK
      if: success()
      run: |
        APK_PATH=$(find . -name "*.apk" | head -n 1)
        if [ -n "$APK_PATH" ]; then
          mkdir -p apk_output
          cp "$APK_PATH" apk_output/ShieldAnalyser.apk
          echo "APK found: $APK_PATH"
        else
          echo "No APK found!"
          exit 1
        fi

    - name: Upload APK Artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: apk_output/*.apk

    - name: Create Release
      if: success() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v1.0.${{ github.run_number }}
        name: Release v1.0.${{ github.run_number }}
        draft: false
        prerelease: false
        files: apk_output/*.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

